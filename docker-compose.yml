version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: zikshana_db
    environment:
      POSTGRES_DB: zikshana_db
      POSTGRES_USER: zikshana_user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - zikshana_network
    restart: unless-stopped

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: zikshana_backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_USERNAME=zikshana_user
      - DB_PASSWORD=password
      - JWT_SECRET=ZikshanaSecretKeyForJWTTokenGeneration2024Docker
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - zikshana_network
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: zikshana_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    depends_on:
      - backend
    networks:
      - zikshana_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: zikshana_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - zikshana_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  zikshana_network:
    driver: bridge